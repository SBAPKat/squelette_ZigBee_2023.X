

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Oct 23 14:43:11 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F45K20 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _TXREG	set	4013
    58  0000                     _PIE1bits	set	3997
    59  0000                     _SPBRG	set	4015
    60  0000                     _RCSTAbits	set	4011
    61  0000                     _TXSTAbits	set	4012
    62  0000                     _RCREG	set	4014
    63  0000                     _PIR1bits	set	3998
    64  0000                     _LATD6	set	31846
    65  0000                     _TRISD6	set	31918
    66  0000                     _TRISA4	set	31892
    67  0000                     _BRG16	set	32195
    68  0000                     _LATA4	set	31820
    69  0000                     _GIE	set	32663
    70  0000                     _PEIE	set	32662
    71  0000                     _RCIE	set	31981
    72  0000                     _RCIP	set	31997
    73  0000                     _RCIF	set	31989
    74                           
    75                           	psect	smallconst
    76  000600                     __psmallconst:
    77                           	opt stack 0
    78  000600  00                 	db	0
    79  000601                     STR_1:
    80  000601  61                 	db	97	;'a'
    81  000602  74                 	db	116	;'t'
    82  000603  0D                 	db	13
    83  000604  00                 	db	0
    84                           
    85                           ; #config settings
    86  000605  00                 	db	0	; dummy byte at the end
    87  0000                     
    88                           	psect	cinit
    89  0006D2                     __pcinit:
    90                           	opt stack 0
    91  0006D2                     start_initialization:
    92                           	opt stack 0
    93  0006D2                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Clear objects allocated to BANK0 (60 bytes)
    97  0006D2  EE00  F060         	lfsr	0,__pbssBANK0
    98  0006D6  0E3C               	movlw	60
    99  0006D8                     clear_0:
   100  0006D8  6AEE               	clrf	postinc0,c
   101  0006DA  06E8               	decf	wreg,f,c
   102  0006DC  E1FD               	bnz	clear_0
   103                           
   104                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   105  0006DE  6A30               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   106                           
   107                           ; Clear objects allocated to COMRAM (16 bytes)
   108  0006E0  EE00  F020         	lfsr	0,__pbssCOMRAM
   109  0006E4  0E10               	movlw	16
   110  0006E6                     clear_1:
   111  0006E6  6AEE               	clrf	postinc0,c
   112  0006E8  06E8               	decf	wreg,f,c
   113  0006EA  E1FD               	bnz	clear_1
   114  0006EC                     end_of_initialization:
   115                           	opt stack 0
   116  0006EC                     __end_of__initialization:
   117                           	opt stack 0
   118  0006EC  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119  0006EE  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120  0006F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   121  0006F2  6EF8               	movwf	tblptru,c
   122  0006F4  0100               	movlb	0
   123  0006F6  EF03  F003         	goto	_main	;jump to C main() function
   124                           tblptru	equ	0xFF8
   125                           postinc0	equ	0xFEE
   126                           wreg	equ	0xFE8
   127                           
   128                           	psect	bitbssCOMRAM
   129  000180                     __pbitbssCOMRAM:
   130                           	opt stack 0
   131  000180                     _flag_OK:
   132                           	opt stack 0
   133  000180                     	ds	1
   134  000181                     _flag_CONNECT:
   135                           	opt stack 0
   136  000181                     	ds	1
   137                           tblptru	equ	0xFF8
   138                           postinc0	equ	0xFEE
   139                           wreg	equ	0xFE8
   140                           
   141                           	psect	bssCOMRAM
   142  000020                     __pbssCOMRAM:
   143                           	opt stack 0
   144  000020                     _TrameERROROK:
   145                           	opt stack 0
   146  000020                     	ds	2
   147  000022                     _TrameFin:
   148                           	opt stack 0
   149  000022                     	ds	2
   150  000024                     _TrameStart:
   151                           	opt stack 0
   152  000024                     	ds	2
   153  000026                     _NbrInt:
   154                           	opt stack 0
   155  000026                     	ds	2
   156  000028                     _rw_ptr:
   157                           	opt stack 0
   158  000028                     	ds	2
   159  00002A                     _Start2:
   160                           	opt stack 0
   161  00002A                     	ds	1
   162  00002B                     _Start1:
   163                           	opt stack 0
   164  00002B                     	ds	1
   165  00002C                     _Start:
   166                           	opt stack 0
   167  00002C                     	ds	1
   168  00002D                     _Data_2:
   169                           	opt stack 0
   170  00002D                     	ds	1
   171  00002E                     _Data_1:
   172                           	opt stack 0
   173  00002E                     	ds	1
   174  00002F                     _Data:
   175                           	opt stack 0
   176  00002F                     	ds	1
   177                           tblptru	equ	0xFF8
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           
   181                           	psect	bssBANK0
   182  000060                     __pbssBANK0:
   183                           	opt stack 0
   184  000060                     _buffin:
   185                           	opt stack 0
   186  000060                     	ds	60
   187                           tblptru	equ	0xFF8
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           
   191                           	psect	cstackCOMRAM
   192  000001                     __pcstackCOMRAM:
   193                           	opt stack 0
   194  000001                     ??_isr:
   195  000001                     
   196                           ; 1 bytes @ 0x0
   197  000001                     	ds	20
   198  000015                     isr@i:
   199                           	opt stack 0
   200                           
   201                           ; 2 bytes @ 0x14
   202  000015                     	ds	2
   203  000017                     ??_Delay1Second:
   204  000017                     putch@c:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x16
   208  000017                     	ds	1
   209  000018                     ?_printf:
   210                           	opt stack 0
   211  000018                     Delay1Second@i:
   212                           	opt stack 0
   213  000018                     printf@f:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x17
   217  000018                     	ds	2
   218  00001A                     printf@ap:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x19
   222  00001A                     	ds	2
   223  00001C                     printf@c:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0x1B
   227  00001C                     	ds	1
   228  00001D                     ??_main:
   229                           
   230                           ; 1 bytes @ 0x1C
   231  00001D                     	ds	1
   232  00001E                     main@i:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x1D
   236  00001E                     	ds	2
   237                           tblptru	equ	0xFF8
   238                           postinc0	equ	0xFEE
   239                           wreg	equ	0xFE8
   240                           
   241 ;;
   242 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   243 ;;
   244 ;; *************** function _main *****************
   245 ;; Defined at:
   246 ;;		line 40 in file "main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;  i               2   29[COMRAM] int 
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   260 ;;      Params:         0       0       0       0       0       0       0
   261 ;;      Locals:         2       0       0       0       0       0       0
   262 ;;      Temps:          1       0       0       0       0       0       0
   263 ;;      Totals:         3       0       0       0       0       0       0
   264 ;;Total ram usage:        3 bytes
   265 ;; Hardware stack levels required when called:    3
   266 ;; This function calls:
   267 ;;		_Delay1Second
   268 ;;		_InitUSART_19200
   269 ;;		_iniPorts
   270 ;;		_printf
   271 ;;		_wait_OK
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278  000606                     __ptext0:
   279                           	opt stack 0
   280  000606                     _main:
   281                           	opt stack 28
   282                           
   283                           ;main.c: 43: int i=0;
   284                           
   285                           ;incstack = 0
   286  000606  0E00               	movlw	0
   287  000608  6E1F               	movwf	main@i+1,c
   288  00060A  0E00               	movlw	0
   289  00060C  6E1E               	movwf	main@i,c
   290                           
   291                           ;main.c: 45: iniPorts();
   292  00060E  EC9A  F003         	call	_iniPorts	;wreg free
   293                           
   294                           ;main.c: 46: InitUSART_19200();
   295  000612  EC8A  F003         	call	_InitUSART_19200	;wreg free
   296                           
   297                           ;main.c: 49: RCIF = 0;
   298  000616  9A9E               	bcf	3998,5,c	;volatile
   299                           
   300                           ;main.c: 50: RCIP = 0;
   301  000618  9A9F               	bcf	3999,5,c	;volatile
   302                           
   303                           ;main.c: 51: RCIE = 1;
   304  00061A  8A9D               	bsf	3997,5,c	;volatile
   305                           
   306                           ;main.c: 52: PEIE = 1;
   307  00061C  8CF2               	bsf	intcon,6,c	;volatile
   308                           
   309                           ;main.c: 53: GIE = 1;
   310  00061E  8EF2               	bsf	intcon,7,c	;volatile
   311                           
   312                           ;main.c: 55: for(i=0;i<2;i++)
   313  000620  0E00               	movlw	0
   314  000622  6E1F               	movwf	main@i+1,c
   315  000624  0E00               	movlw	0
   316  000626  6E1E               	movwf	main@i,c
   317  000628                     l963:
   318  000628  BE1F               	btfsc	main@i+1,7,c
   319  00062A  D006               	goto	l61
   320  00062C  501F               	movf	main@i+1,w,c
   321  00062E  E109               	bnz	l973
   322  000630  0E02               	movlw	2
   323  000632  5C1E               	subwf	main@i,w,c
   324  000634  B0D8               	btfsc	status,0,c
   325  000636  D005               	goto	u250
   326  000638                     l61:
   327                           
   328                           ;main.c: 56: {
   329                           ;main.c: 57: Delay1Second();
   330  000638  EC37  F003         	call	_Delay1Second	;wreg free
   331  00063C  4A1E               	infsnz	main@i,f,c
   332  00063E  2A1F               	incf	main@i+1,f,c
   333  000640  D7F3               	goto	l963
   334  000642                     u250:
   335  000642                     l973:
   336                           
   337                           ;main.c: 58: }
   338                           ;main.c: 61: printf("at\r");
   339  000642  0E01               	movlw	low STR_1
   340  000644  6E18               	movwf	printf@f,c
   341  000646  0E06               	movlw	high STR_1
   342  000648  6E19               	movwf	printf@f+1,c
   343  00064A  EC54  F003         	call	_printf	;wreg free
   344                           
   345                           ;main.c: 63: wait_OK();
   346  00064E  EC7D  F003         	call	_wait_OK	;wreg free
   347  000652                     
   348                           ;main.c: 71: LATA4 = 0;
   349  000652  9889               	bcf	3977,4,c	;volatile
   350                           
   351                           ;main.c: 72: _delay((unsigned long)((20)*(10000000/4000.0)));
   352  000654  0E41               	movlw	65
   353  000656  6E1D               	movwf	??_main& (0+255),c
   354  000658  0EEE               	movlw	238
   355  00065A                     u367:
   356  00065A  2EE8               	decfsz	wreg,f,c
   357  00065C  D7FE               	bra	u367
   358  00065E  2E1D               	decfsz	??_main& (0+255),f,c
   359  000660  D7FC               	bra	u367
   360  000662  F000 F000          	nop2	
   361                           
   362                           ;main.c: 73: LATA4 = 1;
   363  000666  8889               	bsf	3977,4,c	;volatile
   364                           
   365                           ;main.c: 74: Delay1Second();
   366  000668  EC37  F003         	call	_Delay1Second	;wreg free
   367  00066C  D7F2               	goto	l63
   368  00066E                     __end_of_main:
   369                           	opt stack 0
   370                           tblptru	equ	0xFF8
   371                           intcon	equ	0xFF2
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           status	equ	0xFD8
   375                           
   376 ;; *************** function _wait_OK *****************
   377 ;; Defined at:
   378 ;;		line 165 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   392 ;;      Params:         0       0       0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0
   395 ;;      Totals:         0       0       0       0       0       0       0
   396 ;;Total ram usage:        0 bytes
   397 ;; Hardware stack levels used:    1
   398 ;; Hardware stack levels required when called:    1
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text1
   407  0006FA                     __ptext1:
   408                           	opt stack 0
   409  0006FA                     _wait_OK:
   410                           	opt stack 29
   411                           
   412                           ;main.c: 168: Start='\n';
   413                           
   414                           ;incstack = 0
   415  0006FA  0E0A               	movlw	10
   416  0006FC  6E2C               	movwf	_Start,c
   417                           
   418                           ;main.c: 169: Start1='O';
   419  0006FE  0E4F               	movlw	79
   420  000700  6E2B               	movwf	_Start1,c
   421                           
   422                           ;main.c: 170: Start2='K';
   423  000702  0E4B               	movlw	75
   424  000704  6E2A               	movwf	_Start2,c
   425                           
   426                           ;main.c: 171: flag_OK=0;
   427  000706  9030               	bcf	_flag_OK/(0+8),_flag_OK& (0+7),c
   428                           
   429                           ;main.c: 172: LATA4 = 0;
   430  000708  9889               	bcf	3977,4,c	;volatile
   431  00070A  A030               	btfss	_flag_OK/(0+8),_flag_OK& (0+7),c
   432  00070C  D7FE               	goto	l101
   433                           
   434                           ;main.c: 174: }
   435                           ;main.c: 175: flag_OK=0;
   436  00070E  9030               	bcf	_flag_OK/(0+8),_flag_OK& (0+7),c
   437                           
   438                           ;main.c: 176: LATA4 = 1;
   439  000710  8889               	bsf	3977,4,c	;volatile
   440  000712  0012               	return		;funcret
   441  000714                     __end_of_wait_OK:
   442                           	opt stack 0
   443                           tblptru	equ	0xFF8
   444                           intcon	equ	0xFF2
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           status	equ	0xFD8
   448                           
   449 ;; *************** function _printf *****************
   450 ;; Defined at:
   451 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  f               2   23[COMRAM] PTR const unsigned char 
   454 ;;		 -> STR_1(4), 
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  tmpval          4    0        struct .
   457 ;;  cp              3    0        PTR const unsigned char 
   458 ;;  ap              2   25[COMRAM] PTR void [1]
   459 ;;		 -> ?_printf(2), 
   460 ;;  len             2    0        unsigned int 
   461 ;;  val             2    0        unsigned int 
   462 ;;  c               1   27[COMRAM] char 
   463 ;;  flag            1    0        unsigned char 
   464 ;;  prec            1    0        char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  2   23[COMRAM] int 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   474 ;;      Params:         2       0       0       0       0       0       0
   475 ;;      Locals:         3       0       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0
   477 ;;      Totals:         5       0       0       0       0       0       0
   478 ;;Total ram usage:        5 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    2
   481 ;; This function calls:
   482 ;;		_putch
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text2
   489  0006A8                     __ptext2:
   490                           	opt stack 0
   491  0006A8                     _printf:
   492                           	opt stack 28
   493                           
   494                           ;doprnt.c: 466: va_list ap;
   495                           ;doprnt.c: 499: signed char c;
   496                           ;doprnt.c: 506: signed char prec;
   497                           ;doprnt.c: 508: unsigned char flag;
   498                           ;doprnt.c: 523: union {
   499                           ;doprnt.c: 524: unsigned long vd;
   500                           ;doprnt.c: 525: double integ;
   501                           ;doprnt.c: 526: } tmpval;
   502                           ;doprnt.c: 528: unsigned int val;
   503                           ;doprnt.c: 529: unsigned len;
   504                           ;doprnt.c: 530: const char * cp;
   505                           ;doprnt.c: 533: *ap = __va_start();
   506                           
   507                           ;incstack = 0
   508  0006A8  0E1A               	movlw	low (?_printf+2)
   509  0006AA  6E1A               	movwf	printf@ap,c
   510  0006AC  0E00               	movlw	high (?_printf+2)
   511  0006AE  6E1B               	movwf	printf@ap+1,c
   512                           
   513                           ;doprnt.c: 536: while(c = *f++) {
   514  0006B0  D003               	goto	l150
   515  0006B2                     
   516                           ;doprnt.c: 540: {
   517                           ;doprnt.c: 541: (putch(c) );
   518  0006B2  501C               	movf	printf@c,w,c
   519  0006B4  EC94  F003         	call	_putch
   520  0006B8                     l150:
   521  0006B8  C018  FFF6         	movff	printf@f,tblptrl
   522  0006BC  C019  FFF7         	movff	printf@f+1,tblptrh
   523  0006C0  4A18               	infsnz	printf@f,f,c
   524  0006C2  2A19               	incf	printf@f+1,f,c
   525  0006C4                     	if	0	;tblptru may be non-zero
   526  0006C4                     	endif
   527  0006C4                     	if	0	;tblptru may be non-zero
   528  0006C4                     	endif
   529  0006C4  0008               	tblrd		*
   530  0006C6  CFF5 F01C          	movff	tablat,printf@c
   531  0006CA  501C               	movf	printf@c,w,c
   532  0006CC  B4D8               	btfsc	status,2,c
   533  0006CE  0012               	return	
   534  0006D0  D7F0               	goto	l151
   535  0006D2                     __end_of_printf:
   536                           	opt stack 0
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           intcon	equ	0xFF2
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           status	equ	0xFD8
   545                           
   546 ;; *************** function _putch *****************
   547 ;; Defined at:
   548 ;;		line 33 in file "tmd_lib_v0.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  c               1    wreg     unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  c               1   22[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   562 ;;      Params:         0       0       0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0
   565 ;;      Totals:         1       0       0       0       0       0       0
   566 ;;Total ram usage:        1 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; Hardware stack levels required when called:    1
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_printf
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text3
   577  000728                     __ptext3:
   578                           	opt stack 0
   579  000728                     _putch:
   580                           	opt stack 28
   581                           
   582                           ;incstack = 0
   583                           ;putch@c stored from wreg
   584  000728  6E17               	movwf	putch@c,c
   585  00072A                     
   586                           ;tmd_lib_v0.c: 35: while (PIR1bits.TXIF!=1);
   587  00072A  A89E               	btfss	3998,4,c	;volatile
   588  00072C  D7FE               	goto	l775
   589                           
   590                           ;tmd_lib_v0.c: 36: TXREG=c;
   591  00072E  C017  FFAD         	movff	putch@c,4013	;volatile
   592  000732  0012               	return		;funcret
   593  000734                     __end_of_putch:
   594                           	opt stack 0
   595                           tblptru	equ	0xFF8
   596                           tblptrh	equ	0xFF7
   597                           tblptrl	equ	0xFF6
   598                           tablat	equ	0xFF5
   599                           intcon	equ	0xFF2
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           status	equ	0xFD8
   603                           
   604 ;; *************** function _iniPorts *****************
   605 ;; Defined at:
   606 ;;		line 25 in file "tmd_lib_v0.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		None
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   620 ;;      Params:         0       0       0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0
   623 ;;      Totals:         0       0       0       0       0       0       0
   624 ;;Total ram usage:        0 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    1
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text4
   635  000734                     __ptext4:
   636                           	opt stack 0
   637  000734                     _iniPorts:
   638                           	opt stack 29
   639                           
   640                           ;tmd_lib_v0.c: 27: TRISA4 = 0;
   641                           
   642                           ;incstack = 0
   643  000734  9892               	bcf	3986,4,c	;volatile
   644                           
   645                           ;tmd_lib_v0.c: 28: TRISD6 = 0;
   646  000736  9C95               	bcf	3989,6,c	;volatile
   647                           
   648                           ;tmd_lib_v0.c: 29: LATA4 = 0;
   649  000738  9889               	bcf	3977,4,c	;volatile
   650                           
   651                           ;tmd_lib_v0.c: 30: LATD6 = 1;
   652  00073A  8C8C               	bsf	3980,6,c	;volatile
   653  00073C  0012               	return		;funcret
   654  00073E                     __end_of_iniPorts:
   655                           	opt stack 0
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           intcon	equ	0xFF2
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           status	equ	0xFD8
   664                           
   665 ;; *************** function _InitUSART_19200 *****************
   666 ;; Defined at:
   667 ;;		line 13 in file "tmd_lib_v0.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   681 ;;      Params:         0       0       0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text5
   696  000714                     __ptext5:
   697                           	opt stack 0
   698  000714                     _InitUSART_19200:
   699                           	opt stack 29
   700                           
   701                           ;tmd_lib_v0.c: 15: TXSTAbits.SYNC = 0;
   702                           
   703                           ;incstack = 0
   704  000714  98AC               	bcf	4012,4,c	;volatile
   705                           
   706                           ;tmd_lib_v0.c: 16: TXSTAbits.TXEN = 1;
   707  000716  8AAC               	bsf	4012,5,c	;volatile
   708                           
   709                           ;tmd_lib_v0.c: 17: TXSTAbits.BRGH = 1;
   710  000718  84AC               	bsf	4012,2,c	;volatile
   711                           
   712                           ;tmd_lib_v0.c: 18: RCSTAbits.CREN = 1;
   713  00071A  88AB               	bsf	4011,4,c	;volatile
   714                           
   715                           ;tmd_lib_v0.c: 19: BRG16 = 0;
   716  00071C  96B8               	bcf	4024,3,c	;volatile
   717                           
   718                           ;tmd_lib_v0.c: 20: SPBRG = 32;
   719  00071E  0E20               	movlw	32
   720  000720  6EAF               	movwf	4015,c	;volatile
   721                           
   722                           ;tmd_lib_v0.c: 21: PIE1bits.RCIE = 1;
   723  000722  8A9D               	bsf	3997,5,c	;volatile
   724                           
   725                           ;tmd_lib_v0.c: 22: RCSTAbits.SPEN = 1;
   726  000724  8EAB               	bsf	4011,7,c	;volatile
   727  000726  0012               	return		;funcret
   728  000728                     __end_of_InitUSART_19200:
   729                           	opt stack 0
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           intcon	equ	0xFF2
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           status	equ	0xFD8
   738                           
   739 ;; *************** function _Delay1Second *****************
   740 ;; Defined at:
   741 ;;		line 138 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  i               2   23[COMRAM] int 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   755 ;;      Params:         0       0       0       0       0       0       0
   756 ;;      Locals:         2       0       0       0       0       0       0
   757 ;;      Temps:          1       0       0       0       0       0       0
   758 ;;      Totals:         3       0       0       0       0       0       0
   759 ;;Total ram usage:        3 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    1
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text6
   770  00066E                     __ptext6:
   771                           	opt stack 0
   772  00066E                     _Delay1Second:
   773                           	opt stack 29
   774                           
   775                           ;main.c: 140: int i = 0;
   776                           
   777                           ;incstack = 0
   778  00066E  0E00               	movlw	0
   779  000670  6E19               	movwf	Delay1Second@i+1,c
   780  000672  0E00               	movlw	0
   781  000674  6E18               	movwf	Delay1Second@i,c
   782                           
   783                           ;main.c: 141: for(i=0;i<100;i++)
   784  000676  0E00               	movlw	0
   785  000678  6E19               	movwf	Delay1Second@i+1,c
   786  00067A  0E00               	movlw	0
   787  00067C  6E18               	movwf	Delay1Second@i,c
   788  00067E                     l791:
   789  00067E  BE19               	btfsc	Delay1Second@i+1,7,c
   790  000680  D006               	goto	l85
   791  000682  5019               	movf	Delay1Second@i+1,w,c
   792  000684  E110               	bnz	l87
   793  000686  0E64               	movlw	100
   794  000688  5C18               	subwf	Delay1Second@i,w,c
   795  00068A  B0D8               	btfsc	status,0,c
   796  00068C  0012               	return	
   797  00068E                     l85:
   798                           
   799                           ;main.c: 142: {
   800                           ;main.c: 143: _delay((unsigned long)((10)*(10000000/4000.0)));
   801  00068E  0E21               	movlw	33
   802  000690  6E17               	movwf	??_Delay1Second& (0+255),c
   803  000692  0E76               	movlw	118
   804  000694                     u377:
   805  000694  2EE8               	decfsz	wreg,f,c
   806  000696  D7FE               	bra	u377
   807  000698  2E17               	decfsz	??_Delay1Second& (0+255),f,c
   808  00069A  D7FC               	bra	u377
   809  00069C  F000 F000          	nop2	
   810  0006A0  4A18               	infsnz	Delay1Second@i,f,c
   811  0006A2  2A19               	incf	Delay1Second@i+1,f,c
   812  0006A4  D7EC               	goto	l791
   813  0006A6                     l87:
   814  0006A6  0012               	return		;funcret
   815  0006A8                     __end_of_Delay1Second:
   816                           	opt stack 0
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           intcon	equ	0xFF2
   822                           postinc0	equ	0xFEE
   823                           wreg	equ	0xFE8
   824                           status	equ	0xFD8
   825                           
   826 ;; *************** function _isr *****************
   827 ;; Defined at:
   828 ;;		line 80 in file "main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  i               2   20[COMRAM] int 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   842 ;;      Params:         0       0       0       0       0       0       0
   843 ;;      Locals:         2       0       0       0       0       0       0
   844 ;;      Temps:         20       0       0       0       0       0       0
   845 ;;      Totals:        22       0       0       0       0       0       0
   846 ;;Total ram usage:       22 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		Interrupt level 2
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           	psect	intcode
   856  000008                     __pintcode:
   857                           	opt stack 0
   858  000008                     _isr:
   859                           	opt stack 28
   860                           
   861                           ;incstack = 0
   862  000008  8231               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   863  00000A  CFFA F003          	movff	pclath,??_isr+2
   864  00000E  CFFB F004          	movff	pclatu,??_isr+3
   865  000012  CFE9 F005          	movff	fsr0l,??_isr+4
   866  000016  CFEA F006          	movff	fsr0h,??_isr+5
   867  00001A  CFE1 F007          	movff	fsr1l,??_isr+6
   868  00001E  CFE2 F008          	movff	fsr1h,??_isr+7
   869  000022  CFD9 F009          	movff	fsr2l,??_isr+8
   870  000026  CFDA F00A          	movff	fsr2h,??_isr+9
   871  00002A  CFF3 F00B          	movff	prodl,??_isr+10
   872  00002E  CFF4 F00C          	movff	prodh,??_isr+11
   873  000032  CFF6 F00D          	movff	tblptrl,??_isr+12
   874  000036  CFF7 F00E          	movff	tblptrh,??_isr+13
   875  00003A  CFF8 F00F          	movff	tblptru,??_isr+14
   876  00003E  CFF5 F010          	movff	tablat,??_isr+15
   877  000042  C031  F011         	movff	btemp,??_isr+16
   878  000046  C032  F012         	movff	btemp+1,??_isr+17
   879  00004A  C033  F013         	movff	btemp+2,??_isr+18
   880  00004E  C034  F014         	movff	btemp+3,??_isr+19
   881                           
   882                           ;main.c: 82: int i=0;
   883  000052  0E00               	movlw	0
   884  000054  6E16               	movwf	isr@i+1,c
   885  000056  0E00               	movlw	0
   886  000058  6E15               	movwf	isr@i,c
   887                           
   888                           ;main.c: 83: if(PIR1bits.RCIF == 1) {
   889  00005A  AA9E               	btfss	3998,5,c	;volatile
   890  00005C  D075               	goto	i2l71
   891                           
   892                           ;main.c: 84: PIR1bits.RCIF = 0;
   893  00005E  9A9E               	bcf	3998,5,c	;volatile
   894                           
   895                           ;main.c: 85: LATA4=~LATA4;
   896  000060  B889               	btfsc	3977,4,c	;volatile
   897  000062  D002               	goto	i2u27_40
   898  000064  8889               	bsf	3977,4,c	;volatile
   899  000066  D001               	goto	i2u28_45
   900  000068                     i2u27_40:
   901  000068  9889               	bcf	3977,4,c	;volatile
   902  00006A                     i2u28_45:
   903                           
   904                           ;main.c: 86: Data= RCREG;
   905  00006A  CFAE F02F          	movff	4014,_Data	;volatile
   906                           
   907                           ;main.c: 87: NbrInt++;
   908  00006E  4A26               	infsnz	_NbrInt,f,c
   909  000070  2A27               	incf	_NbrInt+1,f,c
   910                           
   911                           ;main.c: 91: if( Data==Start2 && Data_1==Start1 && Data_2==Start) {
   912  000072  502A               	movf	_Start2,w,c
   913  000074  182F               	xorwf	_Data,w,c
   914  000076  A4D8               	btfss	status,2,c
   915  000078  D014               	goto	i2l72
   916  00007A  502B               	movf	_Start1,w,c
   917  00007C  182E               	xorwf	_Data_1,w,c
   918  00007E  A4D8               	btfss	status,2,c
   919  000080  D010               	goto	i2l72
   920  000082  502C               	movf	_Start,w,c
   921  000084  182D               	xorwf	_Data_2,w,c
   922  000086  A4D8               	btfss	status,2,c
   923  000088  D00C               	goto	i2l72
   924                           
   925                           ;main.c: 92: TrameStart=1;
   926  00008A  0E00               	movlw	0
   927  00008C  6E25               	movwf	_TrameStart+1,c
   928  00008E  0E01               	movlw	1
   929  000090  6E24               	movwf	_TrameStart,c
   930                           
   931                           ;main.c: 93: buffin[1]=Data_2;
   932  000092  C02D  F061         	movff	_Data_2,_buffin+1
   933                           
   934                           ;main.c: 94: buffin[2]=Data_1;
   935  000096  C02E  F062         	movff	_Data_1,_buffin+2
   936                           
   937                           ;main.c: 95: rw_ptr=2;
   938  00009A  0E00               	movlw	0
   939  00009C  6E29               	movwf	_rw_ptr+1,c
   940  00009E  0E02               	movlw	2
   941  0000A0  6E28               	movwf	_rw_ptr,c
   942  0000A2                     i2l72:
   943                           
   944                           ;main.c: 97: }
   945                           ;main.c: 99: if (TrameStart) {
   946  0000A2  5024               	movf	_TrameStart,w,c
   947  0000A4  1025               	iorwf	_TrameStart+1,w,c
   948  0000A6  B4D8               	btfsc	status,2,c
   949  0000A8  D04B               	goto	i2l74
   950                           
   951                           ;main.c: 100: rw_ptr++;
   952  0000AA  4A28               	infsnz	_rw_ptr,f,c
   953  0000AC  2A29               	incf	_rw_ptr+1,f,c
   954                           
   955                           ;main.c: 101: buffin[rw_ptr]=Data;
   956  0000AE  0E60               	movlw	low _buffin
   957  0000B0  2428               	addwf	_rw_ptr,w,c
   958  0000B2  6ED9               	movwf	fsr2l,c
   959  0000B4  0E00               	movlw	high _buffin
   960  0000B6  2029               	addwfc	_rw_ptr+1,w,c
   961  0000B8  6EDA               	movwf	fsr2h,c
   962  0000BA  C02F  FFDF         	movff	_Data,indf2
   963                           
   964                           ;main.c: 103: if( Data == '\r') {
   965  0000BE  0E0D               	movlw	13
   966  0000C0  182F               	xorwf	_Data,w,c
   967  0000C2  A4D8               	btfss	status,2,c
   968  0000C4  D03D               	goto	i2l74
   969                           
   970                           ;main.c: 104: TrameStart=0;
   971  0000C6  0E00               	movlw	0
   972  0000C8  6E25               	movwf	_TrameStart+1,c
   973  0000CA  0E00               	movlw	0
   974  0000CC  6E24               	movwf	_TrameStart,c
   975                           
   976                           ;main.c: 105: TrameFin=1;
   977  0000CE  0E00               	movlw	0
   978  0000D0  6E23               	movwf	_TrameFin+1,c
   979  0000D2  0E01               	movlw	1
   980  0000D4  6E22               	movwf	_TrameFin,c
   981                           
   982                           ;main.c: 106: switch (rw_ptr) {
   983  0000D6  D009               	goto	i2l75
   984  0000D8                     i2l76:
   985                           
   986                           ;main.c: 109: flag_OK=1;
   987  0000D8  8030               	bsf	_flag_OK/(0+8),_flag_OK& (0+7),c
   988                           
   989                           ;main.c: 110: break;
   990  0000DA  D017               	goto	i2l77
   991  0000DC                     i2l78:
   992                           
   993                           ;main.c: 113: flag_CONNECT=1;
   994  0000DC  8230               	bsf	_flag_CONNECT/(0+8),_flag_CONNECT& (0+7),c
   995                           
   996                           ;main.c: 114: break;
   997  0000DE  D015               	goto	i2l77
   998  0000E0                     
   999                           ;main.c: 118: TrameERROROK=1;
  1000  0000E0  0E00               	movlw	0
  1001  0000E2  6E21               	movwf	_TrameERROROK+1,c
  1002  0000E4  0E01               	movlw	1
  1003  0000E6  6E20               	movwf	_TrameERROROK,c
  1004                           
  1005                           ;main.c: 119: break;
  1006  0000E8  D010               	goto	i2l77
  1007  0000EA                     i2l75:
  1008  0000EA  C028  F001         	movff	_rw_ptr,??_isr
  1009  0000EE  C029  F002         	movff	_rw_ptr+1,??_isr+1
  1010                           
  1011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1012                           ; Switch size 1, requested type "space"
  1013                           ; Number of cases is 1, Range of values is 0 to 0
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte            4     3 (average)
  1017                           ;	Chosen strategy is simple_byte
  1018  0000F2  5002               	movf	??_isr+1,w,c
  1019  0000F4  0A00               	xorlw	0	; case 0
  1020  0000F6  A4D8               	btfss	status,2,c
  1021  0000F8  D7F3               	goto	i2l79
  1022                           
  1023                           ; Switch size 1, requested type "space"
  1024                           ; Number of cases is 2, Range of values is 4 to 26
  1025                           ; switch strategies available:
  1026                           ; Name         Instructions Cycles
  1027                           ; simple_byte            7     4 (average)
  1028                           ;	Chosen strategy is simple_byte
  1029  0000FA  5001               	movf	??_isr,w,c
  1030  0000FC  0A04               	xorlw	4	; case 4
  1031  0000FE  B4D8               	btfsc	status,2,c
  1032  000100  D7EB               	goto	i2l76
  1033  000102  0A1E               	xorlw	30	; case 26
  1034  000104  B4D8               	btfsc	status,2,c
  1035  000106  D7EA               	goto	i2l78
  1036  000108  D7EB               	goto	i2l79
  1037  00010A                     i2l77:
  1038                           
  1039                           ;main.c: 126: for(i=0; i<=60 ;i++){
  1040  00010A  0E00               	movlw	0
  1041  00010C  6E16               	movwf	isr@i+1,c
  1042  00010E  0E00               	movlw	0
  1043  000110  6E15               	movwf	isr@i,c
  1044  000112                     i2l1023:
  1045  000112  BE16               	btfsc	isr@i+1,7,c
  1046  000114  D006               	goto	i2l80
  1047  000116  5016               	movf	isr@i+1,w,c
  1048  000118  E10F               	bnz	i2l1033
  1049  00011A  0E3D               	movlw	61
  1050  00011C  5C15               	subwf	isr@i,w,c
  1051  00011E  B0D8               	btfsc	status,0,c
  1052  000120  D00B               	goto	i2u35_40
  1053  000122                     i2l80:
  1054                           
  1055                           ;main.c: 127: buffin[i]=0;
  1056  000122  0E60               	movlw	low _buffin
  1057  000124  2415               	addwf	isr@i,w,c
  1058  000126  6ED9               	movwf	fsr2l,c
  1059  000128  0E00               	movlw	high _buffin
  1060  00012A  2016               	addwfc	isr@i+1,w,c
  1061  00012C  6EDA               	movwf	fsr2h,c
  1062  00012E  0E00               	movlw	0
  1063  000130  6EDF               	movwf	indf2,c
  1064  000132  4A15               	infsnz	isr@i,f,c
  1065  000134  2A16               	incf	isr@i+1,f,c
  1066  000136  D7ED               	goto	i2l1023
  1067  000138                     i2u35_40:
  1068  000138                     i2l1033:
  1069                           
  1070                           ;main.c: 128: }
  1071                           ;main.c: 129: rw_ptr=0;
  1072  000138  0E00               	movlw	0
  1073  00013A  6E29               	movwf	_rw_ptr+1,c
  1074  00013C  0E00               	movlw	0
  1075  00013E  6E28               	movwf	_rw_ptr,c
  1076  000140                     i2l74:
  1077                           
  1078                           ;main.c: 130: }
  1079                           ;main.c: 131: }
  1080                           ;main.c: 132: Data_2=Data_1;
  1081  000140  C02E  F02D         	movff	_Data_1,_Data_2
  1082                           
  1083                           ;main.c: 133: Data_1=Data;
  1084  000144  C02F  F02E         	movff	_Data,_Data_1
  1085  000148                     i2l71:
  1086  000148  C014  F034         	movff	??_isr+19,btemp+3
  1087  00014C  C013  F033         	movff	??_isr+18,btemp+2
  1088  000150  C012  F032         	movff	??_isr+17,btemp+1
  1089  000154  C011  F031         	movff	??_isr+16,btemp
  1090  000158  C010  FFF5         	movff	??_isr+15,tablat
  1091  00015C  C00F  FFF8         	movff	??_isr+14,tblptru
  1092  000160  C00E  FFF7         	movff	??_isr+13,tblptrh
  1093  000164  C00D  FFF6         	movff	??_isr+12,tblptrl
  1094  000168  C00C  FFF4         	movff	??_isr+11,prodh
  1095  00016C  C00B  FFF3         	movff	??_isr+10,prodl
  1096  000170  C00A  FFDA         	movff	??_isr+9,fsr2h
  1097  000174  C009  FFD9         	movff	??_isr+8,fsr2l
  1098  000178  C008  FFE2         	movff	??_isr+7,fsr1h
  1099  00017C  C007  FFE1         	movff	??_isr+6,fsr1l
  1100  000180  C006  FFEA         	movff	??_isr+5,fsr0h
  1101  000184  C005  FFE9         	movff	??_isr+4,fsr0l
  1102  000188  C004  FFFB         	movff	??_isr+3,pclatu
  1103  00018C  C003  FFFA         	movff	??_isr+2,pclath
  1104  000190  9231               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1105  000192  0011               	retfie		f
  1106  000194                     __end_of_isr:
  1107                           	opt stack 0
  1108                           pclatu	equ	0xFFB
  1109                           pclath	equ	0xFFA
  1110                           tblptru	equ	0xFF8
  1111                           tblptrh	equ	0xFF7
  1112                           tblptrl	equ	0xFF6
  1113                           tablat	equ	0xFF5
  1114                           prodh	equ	0xFF4
  1115                           prodl	equ	0xFF3
  1116                           intcon	equ	0xFF2
  1117                           postinc0	equ	0xFEE
  1118                           fsr0h	equ	0xFEA
  1119                           fsr0l	equ	0xFE9
  1120                           wreg	equ	0xFE8
  1121                           fsr1h	equ	0xFE2
  1122                           fsr1l	equ	0xFE1
  1123                           indf2	equ	0xFDF
  1124                           fsr2h	equ	0xFDA
  1125                           fsr2l	equ	0xFD9
  1126                           status	equ	0xFD8
  1127                           pclatu	equ	0xFFB
  1128                           pclath	equ	0xFFA
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           prodh	equ	0xFF4
  1134                           prodl	equ	0xFF3
  1135                           intcon	equ	0xFF2
  1136                           postinc0	equ	0xFEE
  1137                           fsr0h	equ	0xFEA
  1138                           fsr0l	equ	0xFE9
  1139                           wreg	equ	0xFE8
  1140                           fsr1h	equ	0xFE2
  1141                           fsr1l	equ	0xFE1
  1142                           indf2	equ	0xFDF
  1143                           fsr2h	equ	0xFDA
  1144                           fsr2l	equ	0xFD9
  1145                           status	equ	0xFD8
  1146                           
  1147                           	psect	rparam
  1148  0000                     pclatu	equ	0xFFB
  1149                           pclath	equ	0xFFA
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           prodh	equ	0xFF4
  1155                           prodl	equ	0xFF3
  1156                           intcon	equ	0xFF2
  1157                           postinc0	equ	0xFEE
  1158                           fsr0h	equ	0xFEA
  1159                           fsr0l	equ	0xFE9
  1160                           wreg	equ	0xFE8
  1161                           fsr1h	equ	0xFE2
  1162                           fsr1l	equ	0xFE1
  1163                           indf2	equ	0xFDF
  1164                           fsr2h	equ	0xFDA
  1165                           fsr2l	equ	0xFD9
  1166                           status	equ	0xFD8
  1167                           
  1168                           	psect	temp
  1169  000031                     btemp:
  1170                           	opt stack 0
  1171  000031                     	ds	1
  1172  0000                     int$flags	set	btemp
  1173  0000                     wtemp6	set	btemp+1
  1174                           pclatu	equ	0xFFB
  1175                           pclath	equ	0xFFA
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           prodh	equ	0xFF4
  1181                           prodl	equ	0xFF3
  1182                           intcon	equ	0xFF2
  1183                           postinc0	equ	0xFEE
  1184                           fsr0h	equ	0xFEA
  1185                           fsr0l	equ	0xFE9
  1186                           wreg	equ	0xFE8
  1187                           fsr1h	equ	0xFE2
  1188                           fsr1l	equ	0xFE1
  1189                           indf2	equ	0xFDF
  1190                           fsr2h	equ	0xFDA
  1191                           fsr2l	equ	0xFD9
  1192                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      48
    BANK0           160      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     214
                                             28 COMRAM     3     3      0
                       _Delay1Second
                    _InitUSART_19200
                           _iniPorts
                             _printf
                            _wait_OK
 ---------------------------------------------------------------------------------
 (1) _wait_OK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     137
                                             23 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _iniPorts                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUSART_19200                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay1Second                                         3     3      0      30
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 22    22      0      69
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay1Second
   _InitUSART_19200
   _iniPorts
   _printf
     _putch
   _wait_OK

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      30       1       51.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C      15        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Oct 23 14:43:11 2023

                      l61 0638                        l63 0652                        l85 068E  
                      l87 06A6              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000               __CFG_LVP$ON 000000  
                     l101 070A                       l150 06B8                       l151 06B2  
                     l791 067E                       l775 072A                       l963 0628  
                     l973 0642                       _GIE 007F97              __CFG_CPB$OFF 000000  
                     u250 0642              __CFG_CPD$OFF 000000                       u367 065A  
                     u377 0694                       _isr 0008              __CFG_BORV$18 000000  
                     wreg 000FE8              __CFG_FOSC$HS 000000   __end_of_InitUSART_19200 0728  
                    ?_isr 0001                      STR_1 0601                      _PEIE 007F96  
                    _RCIE 007CED                      _RCIF 007CF5                      _RCIP 007CFD  
                    i2l71 0148                      i2l80 0122                      i2l72 00A2  
                    i2l74 0140                      i2l75 00EA                      i2l76 00D8  
                    i2l77 010A                      i2l78 00DC                      i2l79 00E0  
                    _Data 002F                      _main 0606                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr2h 000FDA                      fsr0l 000FE9  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
                    btemp 0031                      isr@i 0015                      prodh 000FF4  
                    prodl 000FF3                      start 0194             __CFG_IESO$OFF 000000  
           __CFG_MCLRE$ON 000000              ___param_bank 000000                     ??_isr 0001  
                   ?_main 0001                     _BRG16 007DC3                     _LATA4 007C4C  
                   _LATD6 007C66                     _RCREG 000FAE                     _SPBRG 000FAF  
                   _TXREG 000FAD             __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000                     _Start 002C  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000                     _putch 0728                     main@i 001E  
          __pbitbssCOMRAM 0180           __end_of_wait_OK 0714                     pclath 000FFA  
                   tablat 000FF5                     status 000FD8                     wtemp6 0032  
          __CFG_HFOFST$ON 000000     __size_of_Delay1Second 003A           __initialization 06D2  
            __end_of_main 066E                    ??_main 001D             __activetblptr 000002  
        ?_InitUSART_19200 0001              _Delay1Second 066E                    ?_putch 0001  
                  i2l1023 0112                    i2l1033 0138            __CFG_WDTEN$OFF 000000  
                  _TRISA4 007C94                    _TRISD6 007CAE                    _Data_1 002E  
                  _Data_2 002D                    _NbrInt 0026            __CFG_XINST$OFF 000000  
                  _Start1 002B                    _Start2 002A            __CFG_STVREN$ON 000000  
        __end_of_iniPorts 073E                    _buffin 0060                    clear_0 06D8  
                  clear_1 06E6                    _printf 06A8                    _rw_ptr 0028  
              _TrameStart 0024              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                 ??_wait_OK 0017                    tblptru 000FF8  
                  putch@c 0017                __accesstop 0060   __end_of__initialization 06EC  
         __CFG_PBADEN$OFF 000000             ___rparam_used 000001            __pcstackCOMRAM 0001  
           __end_of_putch 0734                   ??_putch 0017                __pbssBANK0 0060  
            _flag_CONNECT 0181                   ?_printf 0018                   i2u35_40 0138  
                 i2u27_40 0068                   i2u28_45 006A                 ?_iniPorts 0001  
                 __Hparam 0000                   __Lparam 0000              __psmallconst 0600  
                 __pcinit 06D2                   __ramtop 0600                   _flag_OK 0180  
                 __ptext0 0606                   __ptext1 06FA                   __ptext2 06A8  
                 __ptext3 0728                   __ptext4 0734                   __ptext5 0714  
                 __ptext6 066E           __size_of_printf 002A              __size_of_isr 018C  
                 _wait_OK 06FA      end_of_initialization 06EC                ??_iniPorts 0017  
           __Lmediumconst 0000                 _RCSTAbits 000FAB                   printf@c 001C  
                 printf@f 0018                   postinc0 000FEE                 _TXSTAbits 000FAC  
__size_of_InitUSART_19200 0014            __end_of_printf 06D2       start_initialization 06D2  
             __end_of_isr 0194          __CFG_LPT1OSC$OFF 000000                  ??_printf 001A  
             __pbssCOMRAM 0020         __size_of_iniPorts 000A         __CFG_CCP2MX$PORTC 000000  
               __pintcode 0008         ??_InitUSART_19200 0017               __smallconst 0600  
                ?_wait_OK 0001             ?_Delay1Second 0001            __size_of_putch 000C  
                _PIE1bits 000F9D                  _PIR1bits 000F9E          __CFG_WDTPS$32768 000000  
          ??_Delay1Second 0017                  __Hrparam 0000                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000                  _TrameFin 0022          __size_of_wait_OK 001A  
                _iniPorts 0734             __size_of_main 0068              _TrameERROROK 0020  
                int$flags 0031                  intlevel2 0000           _InitUSART_19200 0714  
    __end_of_Delay1Second 06A8                  printf@ap 001A             Delay1Second@i 0018  
